services:
  postgres:
    image: postgres:17.0
    restart: "always"
    networks:
      - productNetworkDb
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: product-service-db
  keycloak-db:
    image: postgres:17.0
    restart: "always"
    container_name: keycloak-db
    networks:
      - productNetworkDb
    ports:
      - "5433:5432"
    volumes:
      - ./docker/keycloak_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: keycloak-db
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.5
    restart: "always"
    networks:
      - productNetworkDb
    command:
      - "start-dev"
    ports:
      - "9080:9080"
    environment:
      KC_HTTP_PORT: 9080
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak-db
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_HEALTH_ENABLED: true
    depends_on:
      - keycloak-db
  zookeeper:
    image: zookeeper:3.9.3
    hostname: zookeeper
    container_name: zookeeper
    restart: "no"
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-kafka:7.7.1
    restart: "no"
    ports:
      - "29092:29092"
      - "9092:9092"
    volumes:
      - ./docker/broker_data:/var/lib/kafka/data
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
  schema-registry:
    image: confluentinc/cp-schema-registry:7.7.1
    hostname: schema-registry
    ports:
      - "8085:8085"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker:29092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8085
  kafkaui:
    image: provectuslabs/kafka-ui:v0.7.2
    restart: "no"
    ports:
      - "8989:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_NAME: local
      KAFKA_CLUSTERS_BOOTSTRAPSERVERS: broker:29092
      KAFKA_CLUSTERS_SCHEMAREGISTRY: http://schema-registry:8085
    depends_on:
      - broker
      - schema-registry

volumes:
  postgres_data:
  broker_data:

networks:
  productNetworkDb:
    driver: bridge